gui:
  theme:
    activeBorderColor:
      - "#cba6f7"
      - bold
    inactiveBorderColor:
      - "#a6adc8"
    optionsTextColor:
      - "#89b4fa"
    selectedLineBgColor:
      - "#313244"
    cherryPickedCommitBgColor:
      - "#45475a"
    cherryPickedCommitFgColor:
      - "#cba6f7"
    unstagedChangesColor:
      - "#f38ba8"
    defaultFgColor:
      - "#cdd6f4"
    searchingActiveBorderColor:
      - "#f9e2af"

customCommands:
  - key: "F"
    context: "files"
    command: "git fetch -p && for branch in $(git branch -vv | grep ': gone]' | awk '{print $1}'); do git branch -D $branch; done"
    description: "Fetch and prune remots mirrors and locals"
  - key: "C"
    context: "files"
    command: git cz c
    description: "commit with commitizen"
    loadiingText: "opening commitizen commit tool"
    subprocess: true
  - key: "M"
    command: "git mergetool {{ .SelectedFile.Name }}"
    context: "files"
    loadingText: "opening git mergetool"
    subprocess: true
  - key: "<c-a>"
    description: "Search the whole history (From a ref and down) for an expression in a file"
    command: "git checkout {{index .PromptResponses 3}}"
    context: "commits"
    prompts:
      - type: "input"
        title: "Search word:"
      - type: "input"
        title: "File/Subtree:"
      - type: "input"
        title: "Ref:"
        initialValue: "{{index .CheckedOutBranch.Name }}"
      - type: "menuFromCommand"
        title: "Commits:"
        command: "git log --oneline {{index .PromptResponses 2}} -S'{{index .PromptResponses 0}}' --all -- {{index .PromptResponses 1}}"
        filter: "(?P<commit_id>[0-9a-zA-Z]*) *(?P<commit_msg>.*)"
        valueFormat: "{{ .commit_id }}"
        labelFormat: "{{ .commit_id | green | bold }} - {{ .commit_msg | yellow }}"
