#!/usr/bin/env bash

axiiPossibleWorkspaces=("flux")
axiiWorkspace="flux"
remoteIPv4="192.168.179.23"
remoteIPv6="60:CF:84:BE:BC:36"
remoteName="G-Outpost"

# check for flags
while getopts "h""w" opt; do
  case $opt in
  h)
    echo "Usage: hhtf"
    echo "Starts a tmux session with a ssh connection to a remote machine."
    echo "This script is intended to be used with hht."
    exit 0
    ;;
  w) # set workspace
    axiiChooseWorkspace=true
    ;;
  \?)
    echo "Invalid option: -$OPTARG" >&2
    exit 1
    ;;
  esac
done

# look for hht binary with which
if [[ $(which hht >/dev/null) ]]; then
  echo "hht binary not found"
  exit 1
fi

sshCommand=$(hht -p)

if [[ $sshCommand == "" ]]; then
  echo "No ssh command found"
  exit 1
fi

if [[ $sshCommand == *"home"* ]]; then
  # if sshCommand with prefix home, cut it out
  sshCommand=$(echo "$sshCommand" | sed 's/home//')
  if ! ping -c 1 -W 1 $remoteIPv4 >/dev/null 2>&1; then
    if [[ $(nmcli -t -f NAME,DEVICE connection show --active | awk -F: '{print $1}' | head -n1) != "$remoteName" ]]; then
      systemctl start wg-quick-GOutpost.service 2>/dev/null
      if [[ $? -ne 0 ]]; then
        echo "Failed to start wg-quick-GOutpost.service"
        exit 1
      fi
      sleep 0.2
    fi

    # try to connect if not use wake up over lan
    if ! ping -c 1 -W 1 $remoteIPv4 >/dev/null 2>&1; then
      # wake up over lan
      wakeonlan $remoteIPv6 >/dev/null 2>&1
      # check with loop on show loading wheel
      spin='-\|/'
      i=0
      while ! ping -c 1 -W 1 $remoteIPv4 >/dev/null 2>&1; do
        i=$(((i + 1) % 4))
        printf "\rWaiting to wake up... ${spin:$i:1}"
        sleep 0.1
      done
      # clear last line
      printf "\r\033[K"
    fi
  fi
  if [[ $axiiChooseWorkspace ]]; then
    # if sshCommand with prefix home, cut it out
    axiiPossibleWorkspaces=$(eval "$sshCommand 'distrobox enter hht -- zsh -ci \"axii w list\" | grep \"-\" | cut -c 5- | cut -f1 -d\":\"'")
    axiiWorkspace=$(echo -e "${axiiPossibleWorkspaces[@]}" | fzf --ansi --prompt=" workspaces  " --height=~50 --layout=reverse --border --exit-0)
  fi
else
  if [[ $axiiChooseWorkspace ]]; then
    axiiPossibleWorkspaces=$(eval "$sshCommand 'bash -ci \"axii w list\" | grep \"-\" | cut -c 5- | cut -f1 -d\":\"'")
    axiiWorkspace=$(echo -e "${axiiPossibleWorkspaces[@]}" | fzf --ansi --prompt=" workspaces  " --height=~50 --layout=reverse --border --exit-0)
  fi
fi

if [[ $axiiWorkspace == "" ]]; then
  echo "No workspace selected"
  exit 1
fi

session="hhtf"

# if session exists, attach to it else create it
if tmux has-session -t $session 2>/dev/null; then
  echo "Session $session already exists. Attaching to it."
  tmux attach -t $session
  exit 0
else
  tmux new-session -d -s $session
fi

# init all windows
window=0
tmux rename-window -t $session:$window "ssh"
window=1
tmux new-window -t $session:$window -n "run/fluxio"
window=2
tmux new-window -t $session:$window -n "dev/fluxio"

# fish start is slow, give it some time
sleep 0.5 >/dev/null

window=0
tmux send-keys -t $session:$window "eval '$sshCommand'" C-m
tmux send-keys -t $session:$window "start-axii-dev -w $axiiWorkspace -a" C-m

window=1
tmux send-keys -t $session:$window "cd fluxio" C-m
tmux send-keys -t $session:$window "npm run dev" C-m

window=2
tmux send-keys -t $session:$window "cd fluxio" C-m
tmux send-keys -t $session:$window "vim" C-m

tmux attach -t $session
